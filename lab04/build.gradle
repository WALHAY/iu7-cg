plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id "org.beryx.runtime" version "1.13.1"
}

group projectGroup
version versionGui

repositories {
    mavenCentral()
}

sourceCompatibility = projectSourceCompatibility
targetCompatibility = projectTargetCompatibility

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.register('buildCli') {
    group = "build"
    application.mainClass = "com.walhay.lab.AppCLI"
    jar.manifest.attributes("Main-Class": "com.walhay.lab.AppCLI")
    sourceSets.main.resources.exclude("AppGUI.java")
	version versionCli
    finalizedBy('build')
}

tasks.register('runCli') {
	dependsOn('buildCli')
	run.standardInput = System.in
	finalizedBy('run')
}

tasks.register('runtimeCli')
{
	dependsOn('buildCli')
	finalizedBy('runtime')
}

tasks.withType(Test) {
    testLogging {
        events "passed"
        events "failed"
    }
}

tasks.build {
    sourceSets.main.resources.exclude("AppCLI.java")
}

application {
    mainClass = 'com.walhay.lab.AppGUI'
}

javafx {
    version = javaFxVersion
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}

jar {
    manifest {
        attributes("Main-Class": "com.walhay.lab.AppGUI")
    }
}

dependencies {
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	implementation("org.openjfx:javafx-controls:${javaFxVersion}")
	implementation("org.openjfx:javafx-swing:${javaFxVersion}")
	implementation("org.json:json:${javaJsonVersion}")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}
